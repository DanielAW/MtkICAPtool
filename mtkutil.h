#ifndef __MTKUTIL_H__
#define __MTKUTIL_H__

typedef enum _ENUM_RF_AT_FUNCID_T {

    RF_AT_FUNCID_VERSION = 0,
    RF_AT_FUNCID_COMMAND,
    RF_AT_FUNCID_POWER,
    RF_AT_FUNCID_RATE,
    RF_AT_FUNCID_PREAMBLE,
    RF_AT_FUNCID_ANTENNA,
    RF_AT_FUNCID_PKTLEN,
    RF_AT_FUNCID_PKTCNT,
    RF_AT_FUNCID_PKTINTERVAL,
    RF_AT_FUNCID_TEMP_COMPEN,
    RF_AT_FUNCID_TXOPLIMIT,  //10
    RF_AT_FUNCID_ACKPOLICY,
    RF_AT_FUNCID_PKTCONTENT,
    RF_AT_FUNCID_RETRYLIMIT,
    RF_AT_FUNCID_QUEUE,
    RF_AT_FUNCID_BANDWIDTH,
    RF_AT_FUNCID_GI,
    RF_AT_FUNCID_STBC,
    RF_AT_FUNCID_CHNL_FREQ,
    RF_AT_FUNCID_RIFS,
    RF_AT_FUNCID_TRSW_TYPE,   //20
    RF_AT_FUNCID_RF_SX_SHUTDOWN,
    RF_AT_FUNCID_PLL_SHUTDOWN,
    RF_AT_FUNCID_SLOW_CLK_MODE,
    RF_AT_FUNCID_ADC_CLK_MODE,
    RF_AT_FUNCID_MEASURE_MODE,
    RF_AT_FUNCID_VOLT_COMPEN,
    RF_AT_FUNCID_DPD_TX_GAIN,
    RF_AT_FUNCID_DPD_MODE,
    RF_AT_FUNCID_TSSI_MODE,
    RF_AT_FUNCID_TX_GAIN_CODE,  //30
    RF_AT_FUNCID_TX_PWR_MODE,

    /* Query command */
    RF_AT_FUNCID_TXED_COUNT = 32,
    RF_AT_FUNCID_TXOK_COUNT,
    RF_AT_FUNCID_RXOK_COUNT,
    RF_AT_FUNCID_RXERROR_COUNT,
    RF_AT_FUNCID_RESULT_INFO,
    RF_AT_FUNCID_TRX_IQ_RESULT,
    RF_AT_FUNCID_TSSI_RESULT,
    RF_AT_FUNCID_DPD_RESULT,
    RF_AT_FUNCID_RXV_DUMP,
    RF_AT_FUNCID_RX_PHY_STATIS,
    RF_AT_FUNCID_MEASURE_RESULT,
    RF_AT_FUNCID_TEMP_SENSOR,
    RF_AT_FUNCID_VOLT_SENSOR,
    RF_AT_FUNCID_READ_EFUSE,
    RF_AT_FUNCID_RX_RSSI,

    /* Set command */
    RF_AT_FUNCID_SET_RX_DEF_ANT = 63,
    RF_AT_FUNCID_SET_DPD_RESULT = 64,
    RF_AT_FUNCID_SET_CW_MODE,
    RF_AT_FUNCID_SET_JAPAN_CH14_FILTER,
    RF_AT_FUNCID_WRITE_EFUSE,
    RF_AT_FUNCID_SET_MAC_DST_ADDRESS,
    RF_AT_FUNCID_SET_MAC_SRC_ADDRESS,
    RF_AT_FUNCID_SET_RXOK_MATCH_RULE,
    RF_AT_FUNCID_SET_CHANNEL_BANDWIDTH = 71,
    RF_AT_FUNCID_SET_DATA_BANDWIDTH = 72,
    RF_AT_FUNCID_SET_PRI_SETTING = 73,
    RF_AT_FUNCID_SET_TX_ENCODE_MODE = 74,
    RF_AT_FUNCID_SET_J_MODE_SETTING = 75,

    /*ICAP command*/
    RF_AT_FUNCID_SET_ICAP_CONTENT = 80,
    RF_AT_FUNCID_SET_ICAP_MODE,
    RF_AT_FUNCID_SET_ICAP_STARTCAP,
    RF_AT_FUNCID_SET_ICAP_SIZE = 83,
    RF_AT_FUNCID_SET_ICAP_TRIGGER_OFFSET,
    RF_AT_FUNCID_QUERY_ICAP_DUMP_FILE = 85,
    RF_AT_FUNCID_QUERY_ICAP_STARTING_ADDR = 86,
    RF_AT_FUNCID_QUERY_ICAP_END_ADDR = 87,
    RF_AT_FUNCID_QUERY_ICAP_WAPPER_ADDR = 88,

    /*2G 5G Band*/
    RF_AT_FUNCID_SET_BAND = 90,

    /*Reset Counter*/
    RF_AT_FUNCID_RESETTXRXCOUNTER = 91,

    /*FAGC RSSI Path*/
    RF_AT_FUNCID_FAGC_RSSI_PATH = 92,

    /*Set RX Filter Packet Length*/
    RF_AT_FUNCID_RX_FILTER_PKT_LEN = 93,

    /*Tone*/
    RF_AT_FUNCID_SET_TONE_RF_GAIN = 96,
    RF_AT_FUNCID_SET_TONE_DIGITAL_GAIN = 97,
    RF_AT_FUNCID_SET_TONE_TYPE = 98,
    RF_AT_FUNCID_SET_TONE_DC_OFFSET = 99,
    RF_AT_FUNCID_SET_TONE_BW = 100,

    /*MT6632 Add*/
    RF_AT_FUNCID_SET_MAC_HEADER = 101,
    RF_AT_FUNCID_SET_SEQ_CTRL = 102,
    RF_AT_FUNCID_SET_PAYLOAD = 103,
    RF_AT_FUNCID_SET_DBDC_BAND_IDX = 104,
    RF_AT_FUNCID_SET_BYPASS_CAL_STEP = 105,

    /*Set RX Path*/
    RF_AT_FUNCID_SET_RX_PATH = 106,

    /*Set Frequency Offset*/
    RF_AT_FUNCID_SET_FRWQ_OFFSET = 107,

    /*Get Frequency Offset*/
    RF_AT_FUNCID_GET_FREQ_OFFSET = 108,

    /*Set RXV Debug Index*/
    RF_AT_FUNCID_SET_RXV_INDEX = 109,

    /*Set Test Mode DBDC Enable*/
    RF_AT_FUNCID_SET_DBDC_ENABLE = 110,

    /*Get Test Mode DBDC Enable*/
    RF_AT_FUNCID_GET_DBDC_ENABLE = 111,

    /*Set ICAP Ring Capture*/
    RF_AT_FUNCID_SET_ICAP_RING = 112,

    /*Set TX Path*/
    RF_AT_FUNCID_SET_TX_PATH = 113,

    /*Set Nss*/
    RF_AT_FUNCID_SET_NSS = 114,

    /*Set TX Antenna Mask*/
    RF_AT_FUNCID_SET_ANTMASK = 115,


    /*TMR set command*/
    RF_AT_FUNCID_SET_TMR_ROLE=116,
    RF_AT_FUNCID_SET_TMR_MODULE=117,
    RF_AT_FUNCID_SET_TMR_DBM=118,
    RF_AT_FUNCID_SET_TMR_ITER=119,

    /* Set ADC For IRR Feature */
    RF_AT_FUNCID_SET_ADC = 120,

    /* Set RX Gain For IRR Feature */
    RF_AT_FUNCID_SET_RX_GAIN = 121,

    /* Set TTG For IRR Feature */
    RF_AT_FUNCID_SET_TTG = 122,

    /* Set TTG ON/OFF For IRR Feature */
    RF_AT_FUNCID_TTG_ON_OFF = 123,

    /* Set TSSI for QA Tool Setting */
    RF_AT_FUNCID_SET_TSSI = 124,

    /* Set Recal Cal Step*/
    RF_AT_FUNCID_SET_RECAL_CAL_STEP = 125,

    /* Set iBF/eBF enable */
    RF_AT_FUNCID_SET_IBF_ENABLE = 126,
    RF_AT_FUNCID_SET_EBF_ENABLE = 127,

    /* Set MPS Setting */
    RF_AT_FUNCID_SET_MPS_SIZE = 128,
    RF_AT_FUNCID_SET_MPS_SEQ_DATA = 129,
    RF_AT_FUNCID_SET_MPS_PAYLOAD_LEN = 130,
    RF_AT_FUNCID_SET_MPS_PKT_CNT = 131,
    RF_AT_FUNCID_SET_MPS_PWR_GAIN = 132,
    RF_AT_FUNCID_SET_MPS_NSS = 133,
    RF_AT_FUNCID_SET_MPS_PACKAGE_BW = 134,
    RF_AT_FUNCID_SET_MPS_SYSTEM_BW = 135,
    RF_AT_FUNCID_GET_CH_TX_PWR_OFFSET = 136,
    RF_AT_FUNCID_SET_CH_TX_PWR_OFFSET = 137,
    RF_AT_FUNCID_GET_EEPROM_ADDR = 138,
    RF_AT_FUNCID_GET_FREQ_OFFSET_EEPROM_ADDR = 139,
    RF_AT_FUNCID_GET_AUTO_ISOLATION_VALUE = 140,
    RF_AT_FUNCID_SET_SINGLE_SKU = 141,
    RF_AT_FUNCID_SET_ABSPOWER = 142,
    /*query TX OK/ERR count at the same time*/
    RF_AT_FUNCID_GET_TX_DATA = 143,
    /*query RX OK/ERR count at the same time*/
    RF_AT_FUNCID_GET_RX_DATA = 144,
    /*get wifi test tool version that matched with FW*/
    RF_AT_FUNCID_GET_VERSION = 145,
    /*Force close calibration dump*/
    RF_AT_FUNCID_SET_CAL_DUMP_CONTROL = 146,
    RF_AT_FUNCID_SET_CHANNEL = 147,
    RF_AT_FUNCID_SET_RATEOFFSET = 155,  /* registered by ohter command, version controlled by FEATURE_SYNC_RATE_OFFSEST_EXT_SUPPORT*/
    RF_AT_FUNCID_SET_MU_AID = 157,
    RF_AT_FUNCID_SET_TX_HE_TB_TTRCR0 = 158,
    RF_AT_FUNCID_SET_TX_HE_TB_TTRCR1 = 159,
    RF_AT_FUNCID_SET_TX_HE_TB_TTRCR2 = 160,
    RF_AT_FUNCID_SET_TX_HE_TB_TTRCR3 = 161,
    RF_AT_FUNCID_SET_TX_HE_TB_TTRCR4 = 162,
    RF_AT_FUNCID_SET_TX_HE_TB_TTRCR5 = 163,
    RF_AT_FUNCID_SET_TX_HE_TB_TTRCR6 = 164,
    RF_AT_FUNCID_SET_SECURITY_MODE = 165,
    RF_AT_FUNCID_SET_HWTX_MODE = 167,
    RF_AT_FUNCID_SET_RATEOFFSET_EX = 170
} ENUM_RF_AT_FUNCID_T;


typedef enum _ENUM_RF_AT_COMMAND_T {
    RF_AT_COMMAND_STOPTEST = 0,
    RF_AT_COMMAND_STARTTX,
    RF_AT_COMMAND_STARTRX,
    RF_AT_COMMAND_RESET,
    RF_AT_COMMAND_OUTPUT_POWER,     /* Payload */
    RF_AT_COMMAND_LO_LEAKAGE,       /* Local freq is renamed to Local leakage */
    RF_AT_COMMAND_CARRIER_SUPPR,    /* OFDM (LTF/STF), CCK (PI,PI/2) */
    RF_AT_COMMAND_TRX_IQ_CAL,
    RF_AT_COMMAND_TSSI_CAL,
    RF_AT_COMMAND_DPD_CAL,
    RF_AT_COMMAND_CW,
    RF_AT_COMMAND_SINGLE_TONE = 15,
    RF_AT_COMMAND_AUTOISO = 17,
    RF_AT_COMMAND_NUM
} ENUM_RF_AT_COMMAND_T;

typedef enum _ENUM_CH_BAND_T {
    CH_BAND_2G_5G    = 0,
    CH_BAND_6G_7G    = 2,
    CH_BAND_NUM      = 3
} ENUM_CH_BAND_T, *P_ENUM_CH_BAND_T;

typedef enum _ENUM_RF_AT_RXOK_MATCH_RULE_T {
    RF_AT_RXOK_DISABLED = 0,
    RF_AT_RXOK_MATCH_RA_ONLY,
    RF_AT_RXOK_MATCH_TA_ONLY,
    RF_AT_RXOK_MATCH_RA_TA,
    RF_AT_RXOK_NUM
} ENUM_RF_AT_RXOK_MATCH_RULE_T, *P_ENUM_RF_AT_RXOK_MATCH_RULE_T;

struct PARAM_WIFI_LOG_LEVEL_UI {
	uint32_t u4Version;
	uint32_t u4Module;
	uint32_t u4Enable;
};

struct PARAM_WIFI_LOG_LEVEL {
	uint32_t u4Version;
	uint32_t u4Module;
	uint32_t u4Level;
};

struct PARAM_CUSTOM_MEM_DUMP_STRUCT {
	uint32_t u4Address;
	uint32_t u4Length;
	uint32_t u4RemainLength;
	uint32_t u4IcapContent;
	uint8_t ucFragNum;
};

struct PARAM_GET_WIFI_TYPE {
	struct net_device *prNetDev;
	uint8_t arWifiTypeName[8];
};

enum ENUM_WIFI_LOG_LEVEL_VERSION_T {
	ENUM_WIFI_LOG_LEVEL_VERSION_V1 = 1,
	ENUM_WIFI_LOG_LEVEL_VERSION_NUM
};

enum ENUM_WIFI_LOG_LEVEL_T {
	ENUM_WIFI_LOG_LEVEL_OFF = 0,
	ENUM_WIFI_LOG_LEVEL_DEFAULT,
	ENUM_WIFI_LOG_LEVEL_EXTREME,
	ENUM_WIFI_LOG_LEVEL_NUM
};

enum ENUM_WIFI_LOG_MODULE_T {
	ENUM_WIFI_LOG_MODULE_DRIVER = 0,
	ENUM_WIFI_LOG_MODULE_FW,
	ENUM_WIFI_LOG_MODULE_NUM,
};

enum ENUM_WIFI_LOG_LEVEL_SUPPORT_T {
	ENUM_WIFI_LOG_LEVEL_SUPPORT_DISABLE = 0,
	ENUM_WIFI_LOG_LEVEL_SUPPORT_ENABLE,
	ENUM_WIFI_LOG_LEVEL_SUPPORT_NUM
};

typedef enum _ENUM_IQ_T {
    IQ_0 = 0,
    IQ_1,
    IQ_NUM
} ENUM_IQ_T, *P_ENUM_IQ_T;

typedef union _IQ_FORMAT_T {
    struct {
        int16_t Value:14;
        int16_t Reserved:2;
    } Value14Bit;
    int16_t     Value16Bit;
} IQ_FORMAT_T, *P_IQ_FORMAT_T;

#endif /* __MTKUTIL_H__ */
